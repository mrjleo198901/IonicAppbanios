/**
 * Created by Juanpa on 23/11/2016.
 */
app.controller('ActivitiesController', function($scope,$http,myProvider,$ionicSlideBoxDelegate) {
  $scope.lista=[
    {
      titulo:'Canopy',
      img:'../img/actividades/canopy.PNG',
      desc:'Permite deslizarse desde la parte superior hacia abajo suspendido en un cable generalmente de acero inoxidable que cruza una quebrada, un río o entre las copas de los árboles.'
    },
    {
      titulo:'Canyoning',
      img:'../img/actividades/canyoning.PNG',
      desc:'Es un deporte que se practica en cascadas, básicamente es el descenso de las mismas a través de una cuerda sujetada a un arnés y otros equipos especiales.'
    },
    {
      titulo:'Downhill',
      img:'../img/actividades/downhill.PNG',
      desc:'Es un descenso de una montaña en bicicleta, hay varias pistas muy técnicas para la práctica de este deporte, y han sido escenario de varias competencias a nivel Nacional e Internacional.'
    },
    {
      titulo:'Puenting',
      img:'../img/actividades/puenting.PNG',
      desc:'Es un deporte que se lo practica en los puentes, se lo realiza con cuerdas que se encuentran atadas a un lado del puente y consiste en saltar del otro extremo del mismo cayendo unos segundos en caída libre y luego en movimientos tipo columpio.'
    },
    {
      titulo:'Rafting',
      img:'../img/actividades/rafting.PNG',
      desc:'Se lo realiza en el río Pastaza en el sector oriental de la ciudad de Baños, partiendo desde San Francisco, o desde el sector de La Penal (Río Negro); generalmente se lo realiza en 2 tramos del río con distinto grado o nivel de dificultad que va entre III a V.'
    },
    {
      titulo:'Spa',
      img:'../img/actividades/spa.PNG',
      desc:'Usted podrá escoger de una gama de  80 diferentes tratamientos, como: fango terapia, baños de vapor, depilaciones, aroma terapia,  hidratación con miel o chocolate, etc. Que le renovarán su vitalidad y espiritualidad  y le llenarán de renovadas energías.'
    }
  ]

  $scope.slideHasChanged = function ($index) {
    console.log($index)
    if ($index === 0) {
      // first box
      //avg = getAvg(ind);
    }
  };

  $scope.next = function() {
    $ionicSlideBoxDelegate.next();
  };
  $scope.previous = function() {
    $ionicSlideBoxDelegate.previous();
  };
  // Called each time the slide changes
  $scope.slideChanged = function(index) {
    $scope.slideIndex = index;
  };
});


// Generated by CoffeeScript 1.9.1
(function () {
  angular.module('ionic.rating', []).constant('ratingConfig', {
    max: 5,
    stateOn: null,
    stateOff: null
  }).controller('RatingController', function ($scope, $attrs, ratingConfig) {
    var ngModelCtrl;
    ngModelCtrl = {
      $setViewValue: angular.noop
    };
    this.init = function (ngModelCtrl_) {
      var max, ratingStates;
      ngModelCtrl = ngModelCtrl_;
      ngModelCtrl.$render = this.render;
      this.stateOn = angular.isDefined($attrs.stateOn) ? $scope.$parent.$eval($attrs.stateOn) : ratingConfig.stateOn;
      this.stateOff = angular.isDefined($attrs.stateOff) ? $scope.$parent.$eval($attrs.stateOff) : ratingConfig.stateOff;
      max = angular.isDefined($attrs.max) ? $scope.$parent.$eval($attrs.max) : ratingConfig.max;
      ratingStates = angular.isDefined($attrs.ratingStates) ? $scope.$parent.$eval($attrs.ratingStates) : new Array(max);
      return $scope.range = this.buildTemplateObjects(ratingStates);
    };
    this.buildTemplateObjects = function (states) {
      var i, j, len, ref;
      ref = states.length;
      for (j = 0, len = ref.length; j < len; j++) {
        i = ref[j];
        states[i] = angular.extend({
          index: 1
        }, {
          stateOn: this.stateOn,
          stateOff: this.stateOff
        }, states[i]);
      }
      return states;
    };
    $scope.rate = function (value) {
      if (!$scope.readonly && value >= 0 && value <= $scope.range.length) {
        ngModelCtrl.$setViewValue(value);
        return ngModelCtrl.$render();
      }
    };
    $scope.reset = function () {
      $scope.value = ngModelCtrl.$viewValue;

      return $scope.onLeave();
    };
    $scope.enter = function (value) {
      if (!$scope.readonly) {
        $scope.value = value;
      }
      return $scope.onHover({
        value: value
      });
    };
    $scope.onKeydown = function (evt) {
      if (/(37|38|39|40)/.test(evt.which)) {
        evt.preventDefault();
        evt.stopPropagation();
        return $scope.rate($scope.value + (evt.which === 38 || evt.which === 39 ? {
            1: -1
          } : void 0));
      }
    };
    this.render = function () {
      return $scope.value = ngModelCtrl.$viewValue;
    };
    return this;
  }).directive('rating', function () {
    return {
      restrict: 'EA',
      require: ['rating', 'ngModel'],
      scope: {
        readonly: '=?',
        onHover: '&',
        onLeave: '&'
      },
      controller: 'RatingController',
      template: '<ul class="rating" ng-mouseleave="reset()" ng-keydown="onKeydown($event)">' + '<li ng-repeat="r in range track by $index" ng-click="rate($index + 1)"><i class="icon" ng-class="$index < value && (r.stateOn || \'ion-ios-star\') || (r.stateOff || \'ion-ios-star-outline\')"></i></li>' + '</ul>',
      replace: true,
      link: function (scope, element, attrs, ctrls) {
        var ngModelCtrl, ratingCtrl;
        ratingCtrl = ctrls[0];
        ngModelCtrl = ctrls[1];
        if (ngModelCtrl) {
          return ratingCtrl.init(ngModelCtrl);
        }
      }
    };
  });

}).call(this);

